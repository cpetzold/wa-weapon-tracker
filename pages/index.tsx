import { Flex, Grid, GridItem } from "@chakra-ui/react";
import { map, range } from "ramda";

import Head from "next/head";
import Image from "next/image";
import type { NextPage } from "next";
import { useState } from "react";

const WEAPONS = [
  // Util
  "Jet Pack",
  "Low Gravity",
  "Fast Walk",
  "Laser Sight",
  "Invisibility",

  // F1
  "Bazooka",
  "Homing Missile",
  "Mortar",
  "Homing Pigeon",
  "Sheep Launcher",

  // F2
  "Grenade",
  "Cluster",
  "Banana Bomb",
  "Battle Axe",
  "Earth Quake",

  // F3
  "Shotgun",
  "Handgun",
  "Uzi",
  "Minigun",
  "Longbow",

  // F4
  "Fire Punch",
  "Dragon Ball",
  "Kamikaze",
  "Suicide Bomber",
  "Prod",

  // F5
  "Dynamite",
  "Mine",
  "Sheep",
  "Super Sheep",
  "Mole Bomb",

  // F6
  "Air Strike",
  "Napalm Strike",
  "Mail Strike",
  "Mine Strike",
  "Mole Squadron",

  // F7
  "Blowtorch",
  "Pneumatic Drill",
  "Girder",
  "Baseball Bat",
  "Girder Starter-Pack",

  // F8
  "Ninja Rope",
  "Bungee",
  "Parachute",
  "Teleport",
  "Scales of Justice",

  // F9
  "Super Banana",
  "Holy Hand-Grenade",
  "Flame Thrower",
  "Salvation Army",
  "MB Bomb",

  // F10
  "Petrol Bomb",
  "Skunk",
  "Priceless Ming Vase",
  "French Sheep Strike",
  "Mike's Carpet Bomb",

  // F11
  "Mad Cow",
  "Old Woman",
  "Concrete Donkey",
  "Indian Nuclear Test",
  "Armageddon",

  // F12
  "Skip Go",
  "Surrender",
  "Worm Select",
  "Freeze",
  "Patsy's Magic Bullet",
];

interface WeaponPanelProps {
  size?: number | string;
  bottomText?: string;
  onMouseOverWeapon?: (weapon: string) => void;
  onMouseOutWeapon?: (weapon: string) => void;
}

function WeaponPanel({
  onMouseOverWeapon,
  onMouseOutWeapon,
  size = "32px",
  bottomText,
}: WeaponPanelProps) {
  return (
    <Grid
      templateColumns="32px auto"
      backgroundColor="#777"
      padding="1px"
      gap="1px"
      alignItems="start"
    >
      <Grid gap="1px">
        {map(
          (row) => (
            <GridItem
              key={row}
              backgroundColor="#000"
              fontSize="x-small"
              padding="2px"
              width={size}
              height={size}
            >
              {row}
            </GridItem>
          ),
          ["Util.", ...map((n) => `F${n + 1}`, range(0, 12))]
        )}
      </Grid>
      <Grid templateColumns="repeat(5, auto)" gap="1px">
        {WEAPONS.map((weapon) => (
          <GridItem
            key={weapon}
            width={size}
            height={size}
            cursor="pointer"
            onMouseOver={(e) => onMouseOverWeapon?.(weapon)}
            onMouseOut={(e) => onMouseOutWeapon?.(weapon)}
            _hover={{
              boxShadow: "0 0 0 1px #fff",
            }}
          >
            <Image
              alt={weapon}
              src={`/weapons/${weapon}.png`}
              width={size}
              height={size}
            />
          </GridItem>
        ))}
      </Grid>

      <GridItem
        colSpan={2}
        backgroundColor="#000"
        fontSize="x-small"
        padding="2px"
      >
        {bottomText}&nbsp;
      </GridItem>
    </Grid>
  );
}

const Home: NextPage = () => {
  const [hoveredWeapon, setHoveredWeapon] = useState<string>();

  return (
    <div>
      <Head>
        <title>W:A Weapon Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex
        width="100vw"
        height="100vh"
        alignItems="center"
        justifyContent="center"
      >
        <WeaponPanel
          bottomText={hoveredWeapon}
          onMouseOverWeapon={setHoveredWeapon}
          onMouseOutWeapon={(weapon) => setHoveredWeapon(undefined)}
        />
      </Flex>
    </div>
  );
};

export default Home;
